;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of Northern_Alta
;;; created at:
;;;     Mon Jan 16 20:57:21 UTC 2023
;;; based on Matrix customization system version of:
;;;     Fri 10 Jun 2022 12:58:58 AM UTC
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

basic-head-comp-phrase :+ [ SYNSEM [ LIGHT -,
             LOCAL.CAT.MC #mc ],
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

head :+ [ PRON bool,
    POSSESSOR poss,
    FORM form,
    AUX bool ].

+np :+ [ CASE-MARKED bool,
    CASE case ].

png :+ [ PERNUM pernum ].

cat :+ [ POSSESSUM poss ].

poss := *top* &
  [ POSS-AGR png ].

basic-bare-np-phrase :+ [ SYNSEM.LOCAL.CAT [ VAL.SPEC < >,
                       HEAD #head,
                       POSSESSUM #possessum ],
    HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD #head,
                                POSSESSUM #possessum & nonpossessive ] ].

basic-head-1st-comp-phrase :+ [ SYNSEM.LOCAL.CAT.POSSESSUM #poss,
    HEAD-DTR.SYNSEM.LOCAL.CAT.POSSESSUM #poss ].

basic-head-opt-subj-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

; We can't just use the V-final and V-initial word
; order modules together to get a good free word order
; module. The root of the problem seems to be that we
; need the subject to be able to attach inside the
; object(s) for VSO and OSV, but at the same time, we
; don't want complete flexibility on order of attachment
; when the verb is in the middle -- that would give
; spurious ambiguity.  This solution adopts the xmod
; hierarchy to enforce right-first attachment.  That is,
; all arguments appears to the right of the verb must
; attach before all arguments appearing to the left.  The
; linguistic prediction of this analysis is that free
; word order languages do not have a consistent VP
; consituent, even when the verb and object are adjacent
; (OV order).  Using a separate feature for tracking
; argument attachment (as opposed to modifier
; attachment).  We might be able to collapse these one
; day, but that's not obvious.

synsem :+ [ ATTACH xmod ].

; We'll need to add identification of ATTACH between
;     mother and head-daughter for all other kinds of phrases
;     if we do this.  Just for illustration, I'm putting it
;     in for head-adjunct phrases here:

head-mod-phrase :+ [ SYNSEM.ATTACH #attach,
    HEAD-DTR.SYNSEM.ATTACH #attach ].

top-coord-rule :+ [ SYNSEM.LOCAL.CAT [ HEAD.POSSESSOR #possessor,
                       POSSESSUM #possessum ],
    RCOORD-DTR.SYNSEM.LOCAL.CAT [ HEAD.POSSESSOR #possessor,
                                  POSSESSUM #possessum ],
    LCOORD-DTR.SYNSEM.LOCAL.CAT [ HEAD.POSSESSOR #possessor,
                                  POSSESSUM #possessum ] ].

bottom-coord-phrase :+ [ SYNSEM.LOCAL.CAT [ HEAD.POSSESSOR #possessor,
                       POSSESSUM #possessum ],
    NONCONJ-DTR.SYNSEM.LOCAL.CAT [ HEAD.POSSESSOR #possessor,
                                   POSSESSUM #possessum ] ].

mid-coord-rule :+ [ SYNSEM.LOCAL.CAT [ HEAD.POSSESSOR #possessor,
                       POSSESSUM #possessum ],
    RCOORD-DTR.SYNSEM.LOCAL.CAT [ HEAD.POSSESSOR #possessor,
                                  POSSESSUM #possessum ],
    LCOORD-DTR.SYNSEM.LOCAL.CAT [ HEAD.POSSESSOR #possessor,
                                  POSSESSUM #possessum ] ].

;;;;;;;;;;;;;;
;;; Features
;;;;;;;;;;;;;;

;;; Pernum

pernum := *top*.
sg := pernum.
du := pernum.
nsg := pernum.
pl := pernum.
1st := pernum.
2nd := pernum.
3rd := pernum.
1sg := 1st & sg.
2sg := 2nd & sg.
3sg := 3rd & sg.
1du := 1st & du.
1du_incl := 1du.
1du_excl := 1du.
2du := 2nd & du.
3du := 3rd & du.
1nsg := 1st & nsg.
1nsg_incl := 1nsg.
1nsg_excl := 1nsg.
2nsg := 2nd & nsg.
3nsg := 3rd & nsg.
1pl := 1st & pl.
1pl_incl := 1pl.
1pl_excl := 1pl.
2pl := 2nd & pl.
3pl := 3rd & pl.

;;; Possession

possession := *top*.
possessive := poss.  ; supertype for possessive features
nonpossessive := poss.  ; type for nonpossessive
possessor := possessive.
possessum := possessive.
possessive-pron-1 := possessive.  ; supertype for strategy pron-1
possessor-pron-1 := possessor & possessive-pron-1.
possessum-pron-1 := possessum & possessive-pron-1.

;;; Case

case := *top*.
real-case := case.  ; intermediate case type for all real cases
erg := real-case.  ; erg
abs := real-case.  ; abs
ins := real-case.  ; ins
loc := real-case.  ; loc
obl := real-case.  ; obl
gen := real-case.  ; gen

;;; Form

form := *top*.
nonfinite := form.
finite := form.

;;; Aspect

pot := aspect.
pfv := aspect.

;;; Mood

oblig := mood.

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

noun-lex := basic-noun-lex & basic-non-wh-word-lex & non-local-none-lex-item & no-hcons-lex-item & non-mod-lex-item &
  [ ARG-ST < #spr >,
    SYNSEM.LOCAL.CAT [ VAL [ SPR < #spr &
                                   [ LOCAL.CAT.HEAD det ] >,
                             COMPS < >,
                             SUBJ < >,
                             SPEC < > ],
                       HEAD.POSSESSOR nonpossessive,
                       POSSESSUM nonpossessive ] ].

noun2-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun7-noun-lex := noun-lex & noun-pc1-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun16-noun-lex := noun-lex & noun-pc21-rule-dtr & noun-pc5-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun22-noun-lex := noun-lex & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun28-noun-lex := noun-lex & noun-pc10-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun29-noun-lex := noun-lex & noun-pc11-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun41-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun44-noun-lex := noun-lex & noun-pc1-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun49-noun-lex := noun-lex & noun-pc1-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun55-noun-lex := noun-lex & noun-pc21-rule-dtr & noun-pc5-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun59-noun-lex := noun-lex & noun-pc23-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM 3rd ].

noun60-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.HEAD.PRON +,
                   CONT.HOOK.INDEX.PNG.PERNUM 3rd ] ].

noun61-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 1st,
                   CAT.HEAD [ PRON +,
                              CASE loc,
                              CASE-MARKED + ] ] ].

noun62-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 1pl_excl,
                   CAT.HEAD [ PRON +,
                              CASE loc,
                              CASE-MARKED + ] ] ].

noun63-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 2nd,
                   CAT.HEAD [ PRON +,
                              CASE loc,
                              CASE-MARKED + ] ] ].

noun64-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 1pl_incl,
                   CAT.HEAD [ PRON +,
                              CASE loc,
                              CASE-MARKED + ] ] ].

noun65-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 3sg,
                   CAT.HEAD [ PRON +,
                              CASE loc,
                              CASE-MARKED + ] ] ].

noun66-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM 3rd,
                   CAT.HEAD [ PRON +,
                              CASE loc,
                              CASE-MARKED + ] ] ].

noun67-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.PERNUM pl,
                   CAT.HEAD [ PRON +,
                              CASE gen,
                              CASE-MARKED + ] ] ].

noun68-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.HEAD.PRON +,
                   CONT.HOOK.INDEX.PNG.PERNUM 1pl_excl ] ].

noun69-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.HEAD.PRON +,
                   CONT.HOOK.INDEX.PNG.PERNUM 2nd ] ].

noun70-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.HEAD.PRON +,
                   CONT.HOOK.INDEX.PNG.PERNUM 1st ] ].

noun71-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.HEAD.PRON +,
                   CONT.HOOK.INDEX.PNG.PERNUM 1pl_incl ] ].

noun72-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.HEAD.PRON +,
                   CONT.HOOK.INDEX.PNG.PERNUM 3sg ] ].

noun73-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.HEAD.PRON +,
                   CONT.HOOK.INDEX.PNG.PERNUM nsg ] ].

noun74-noun-lex := noun-lex & noun-pc1-rule-dtr & noun-pc10-rule-dtr & noun-pc11-rule-dtr & noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr & noun-pc21-rule-dtr & noun-pc3-rule-dtr & noun-pc5-rule-dtr & noun-pc8-rule-dtr &
  [ SYNSEM.LOCAL.CAT.HEAD [ PRON +,
                            CASE obl,
                            CASE-MARKED + ] ].

noun75-noun-lex := noun-lex & noun-pc23-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.HEAD.PRON +,
                   CONT.HOOK.INDEX.PNG.PERNUM 1pl_excl ] ].

;;; Verbs

verb-lex := non-mod-lex-item &
  [ SYNSEM [ LOCAL.CAT.HEAD verb,
             L-QUE - ] ].

main-verb-lex := verb-lex & basic-verb-lex & basic-non-wh-word-lex &
  [ SYNSEM [ L-QUE -,
             LOCAL [ CAT [ HEAD.AUX -,
                           VAL [ SPEC < >,
                                 SUBJ < #subj > ] ],
                     CONT.HOOK.XARG #xarg ] ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT cat-sat &
                               [ VAL [ SPR < >,
                                       COMPS < > ] ],
                           CONT.HOOK.INDEX #xarg ] ] ].

aux-lex := verb-lex & basic-icons-lex-item &
  [ SYNSEM [ LOCAL.CAT.HEAD.AUX +,
             L-QUE - ] ].

intransitive-verb-lex := main-verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST < [ LOCAL.CAT.HEAD +np &
                              [ CASE real-case ] ] > ].

transitive-verb-lex := main-verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD +np &
                              [ CASE real-case ] ],
             #comps &
             [ LOCAL.CAT cat-sat &
                         [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD +np &
                                [ CASE real-case ] ] ] > ].

abs-intransitive-verb-lex := intransitive-verb-lex &
  [ ARG-ST.FIRST.LOCAL.CAT.HEAD +np &
                                [ CASE abs ] ].

erg-abs-transitive-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ < [ LOCAL.CAT.HEAD.CASE-MARKED + ] >,
    ARG-ST < [ LOCAL.CAT.HEAD noun &
                              [ CASE erg ] ],
             [ LOCAL.CAT.HEAD +np &
                              [ CASE abs ] ] > ].

verb9-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD [ CASE abs,
                                                      CASE-MARKED + ] ].

verb10-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc4-rule-dtr & verb-pc9-rule-dtr.

verb11-verb-lex := intransitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE erg,
                                                     CASE-MARKED + ] ].

verb12-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc4-rule-dtr & verb-pc6-rule-dtr & verb-pc7-rule-dtr & verb-pc9-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD [ CASE abs,
                                                      CASE-MARKED + ] ].

verb25-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc14-rule-dtr & verb-pc2-rule-dtr & verb-pc4-rule-dtr & verb-pc7-rule-dtr & verb-pc9-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD [ CASE abs,
                                                      CASE-MARKED + ] ].

verb35-verb-lex := intransitive-verb-lex & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc4-rule-dtr & verb-pc9-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE erg,
                                                     CASE-MARKED + ] ].

verb42-verb-lex := intransitive-verb-lex & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc15-rule-dtr & verb-pc19-rule-dtr & verb-pc2-rule-dtr & verb-pc20-rule-dtr & verb-pc22-rule-dtr & verb-pc24-rule-dtr & verb-pc4-rule-dtr & verb-pc6-rule-dtr & verb-pc7-rule-dtr & verb-pc9-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE erg,
                                                     CASE-MARKED + ] ].

verb57-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc10-rule-dtr & verb-pc11-rule-dtr & verb-pc18-rule-dtr & verb-pc9-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE gen,
                                                       CASE-MARKED + ],
                           COMPS.FIRST.LOCAL.CAT.HEAD [ CASE abs,
                                                        CASE-MARKED + ] ] ].

verb63-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc15-rule-dtr & verb-pc18-rule-dtr & verb-pc19-rule-dtr & verb-pc2-rule-dtr & verb-pc20-rule-dtr & verb-pc22-rule-dtr & verb-pc24-rule-dtr & verb-pc4-rule-dtr & verb-pc9-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD [ CASE abs,
                                                      CASE-MARKED + ] ].

verb88-verb-lex := transitive-verb-lex & verb-pc13-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD [ CASE abs,
                                                      CASE-MARKED + ] ].

verb89-verb-lex := intransitive-verb-lex & verb-pc13-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE erg,
                                                     CASE-MARKED + ] ].

verb91-verb-lex := intransitive-verb-lex & verb-pc11-rule-dtr & verb-pc14-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE erg,
                                                     CASE-MARKED + ] ].

verb93-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc14-rule-dtr & verb-pc20-rule-dtr & verb-pc22-rule-dtr & verb-pc24-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD [ CASE abs,
                                                      CASE-MARKED + ] ].

verb111-verb-lex := transitive-verb-lex.

verb116-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc19-rule-dtr.

verb142-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc10-rule-dtr & verb-pc11-rule-dtr & verb-pc18-rule-dtr & verb-pc9-rule-dtr.

verb148-verb-lex := transitive-verb-lex & verb-pc2-rule-dtr.

;;; Auxiliaries

subj-raise-aux := aux-lex & trans-first-arg-raising-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPEC < >,
                             COMPS < #comps >,
                             SUBJ < #subj &
                                    [ LOCAL.CAT.HEAD.CASE real-case ] > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CAT [ HEAD noun,
                             VAL [ SUBJ < >,
                                   SPR < >,
                                   SPEC < >,
                                   COMPS < > ] ],
                       CONT.HOOK.INDEX #xarg ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ SUBJ < unexpressed >,
                                 COMPS < >,
                                 SPR < >,
                                 SPEC < > ],
                           HEAD verb &
                                [ AUX - ] ] ] > ].

subj-raise-aux-with-pred := subj-raise-aux & norm-sem-lex-item & trans-first-arg-raising-lex-item-1.

aux1-aux-lex := subj-raise-aux-with-pred &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.ASPECT pot,
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

subj-raise-aux-no-pred := subj-raise-aux & raise-sem-lex-item.

aux2-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.MOOD oblig,
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

aux3-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.ASPECT pfv,
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

aux4-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.MOOD oblig,
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

aux5-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E [ ASPECT pfv,
                                       MOOD oblig ],
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

neg6-aux-lex := subj-raise-aux-with-pred &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ].

aux7-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.ASPECT pot,
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

aux8-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E [ ASPECT pfv,
                                       MOOD oblig ],
                   CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ] ].

;;; Complementizers

;;; Others

;;; Case-marking adpositions
;;; Case marking adpositions are constrained not to
;;; be modifiers.

case-marking-adp-lex := non-local-none-lex-item & raise-sem-lex-item &
  [ SYNSEM.LOCAL.CAT [ VAL [ SPR < >,
                             SUBJ < >,
                             COMPS < #comps >,
                             SPEC < > ],
                       HEAD adp &
                            [ CASE #case,
                              MOD < >,
                              POSSESSOR nonpossessive ],
                       POSSESSUM nonpossessive ],
    ARG-ST < #comps &
             [ LOCAL.CAT [ VAL.SPR < >,
                           HEAD noun &
                                [ CASE #case & real-case,
                                  CASE-MARKED - ] ] ] > ].

;;; Determiners
;;; SPEC is non-empty, and already specified by basic-determiner-lex.

determiner-lex := basic-determiner-lex & basic-non-wh-word-lex & norm-zero-arg & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < >,
                           COMPS < >,
                           SUBJ < > ] ].

det1-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.L-QUE - ].

;;; Adverbs

;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

;;; Intermediate rule types

noun-pc10-rule-dtr := word-or-lexrule.
verb-pc20-rule-dtr := word-or-lexrule.
verb-pc15-rule-dtr := word-or-lexrule.
noun-pc23-rule-dtr := word-or-lexrule.
verb-pc18-rule-dtr := word-or-lexrule.
verb-pc22-rule-dtr := word-or-lexrule.
verb-pc11-rule-dtr := word-or-lexrule.
noun-pc1-rule-dtr := word-or-lexrule.
noun-pc3-rule-dtr := word-or-lexrule.
verb-pc19-rule-dtr := word-or-lexrule.
verb-pc4-rule-dtr := word-or-lexrule.
verb-pc6-rule-dtr := word-or-lexrule.
noun-pc21-rule-dtr := word-or-lexrule.
noun-pc5-rule-dtr := word-or-lexrule.
verb-pc10-rule-dtr := word-or-lexrule.
noun-pc8-rule-dtr := word-or-lexrule.
verb-pc13-rule-dtr := word-or-lexrule.
verb-pc7-rule-dtr := word-or-lexrule.
verb-pc24-rule-dtr := word-or-lexrule.
verb-pc9-rule-dtr := word-or-lexrule.
noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr := word-or-lexrule.
verb-pc2-rule-dtr := word-or-lexrule.
verb-pc1-rule-dtr := word-or-lexrule.
noun-pc11-rule-dtr := word-or-lexrule.
verb-pc14-rule-dtr := word-or-lexrule.

;;; Lexical rule types

noun-pc1-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc1-rule-dtr ].

noun-pc1_lrt1-lex-rule := noun-pc1-lex-rule-super.

noun-pc2-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc1-rule-dtr &
  [ DTR noun7-noun-lex ].

noun-pc2_lrt1-lex-rule := noun-pc2-lex-rule-super.

noun-pc3-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc1-rule-dtr &
  [ DTR noun-pc3-rule-dtr ].

noun-pc3_lrt1-lex-rule := noun-pc3-lex-rule-super.

noun-pc3_lrt2-lex-rule := noun-pc3-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM du ].

noun-pc4-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc21-rule-dtr & noun-pc5-rule-dtr &
  [ DTR noun16-noun-lex ].

noun-pc4_lrt1-lex-rule := noun-pc4-lex-rule-super.

noun-pc5-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc21-rule-dtr &
  [ DTR noun-pc5-rule-dtr ].

noun-pc5_lrt1-lex-rule := noun-pc5-lex-rule-super.

noun-pc8-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc8-rule-dtr ].

noun-pc8_lrt1-lex-rule := noun-pc8-lex-rule-super.

noun-pc9-lex-rule-super := add-only-no-ccont-rule &
  [ DTR noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr ].

noun-pc9_lrt1-lex-rule := infl-lex-rule & noun-pc9-lex-rule-super.

noun-pc9_lrt2-lex-rule := infl-lex-rule & noun-pc9-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE ins,
                            CASE-MARKED + ] ].

noun-pc9-synth-adp-lex-rule := const-lex-rule & noun-pc9-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE abs,
                            CASE-MARKED - ] ].

noun-pc10-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc10-rule-dtr ].

noun-pc10_lrt1-lex-rule := noun-pc10-lex-rule-super.

noun-pc11-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc11-rule-dtr ].

noun-pc11_lrt1-lex-rule := noun-pc11-lex-rule-super.

noun-pc12-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc21-rule-dtr & noun-pc5-rule-dtr &
  [ DTR noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr ].

noun-pc12_lrt1-lex-rule := noun-pc12-lex-rule-super.

noun-pc13-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun41-noun-lex ].

noun-pc13_lrt1-lex-rule := noun-pc13-lex-rule-super.

noun-pc14-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc1-rule-dtr &
  [ DTR noun44-noun-lex ].

noun-pc14_lrt1-lex-rule := noun-pc14-lex-rule-super.

noun-pc16-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc1-rule-dtr & noun-pc3-rule-dtr &
  [ DTR noun-pc12-or-noun-pc16-or-noun-pc9-rule-dtr ].

noun-pc16_lrt1-lex-rule := noun-pc16-lex-rule-super.

noun-pc18-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc1-rule-dtr &
  [ DTR noun49-noun-lex ].

noun-pc18_lrt1-lex-rule := noun-pc18-lex-rule-super.

noun-pc20-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc21-rule-dtr & noun-pc5-rule-dtr &
  [ DTR noun55-noun-lex ].

noun-pc20_lrt1-lex-rule := noun-pc20-lex-rule-super.

noun-pc21-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc21-rule-dtr ].

noun-pc21_lrt1-lex-rule := noun-pc21-lex-rule-super.

noun-pc23-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc23-rule-dtr ].

noun-pc23_lrt1-lex-rule := noun-pc23-lex-rule-super.

noun-pc24-lex-rule-super := infl-lex-rule &
  [ DTR noun-lex ].

noun-pc24_lrt1-lex-rule := noun-pc24-lex-rule-super &
  [ SYNSEM.LOCAL.CAT [ HEAD #head,
                       VAL [ SPR < >,
                             SPEC #spec,
                             SUBJ #subj,
                             COMPS #comps ] ],
    C-CONT [ HOOK #hook,
             RELS.LIST < noun-relation &
                         [ PRED "pron_rel",
                           LBL #lbl2,
                           ARG0 #possessor &
                                [ PNG.PERNUM 1st,
                                  COG-ST activ-or-more,
                                  SPECI + ] ],
                         quant-relation &
                         [ PRED "exist_q_rel",
                           ARG0 #possessum,
                           RSTR #harg ],
                         arg12-ev-relation &
                         [ PRED "poss_rel",
                           LBL #lbl,
                           ARG1 #possessum,
                           ARG2 #possessor ],
                         quant-relation &
                         [ PRED "exist_q_rel",
                           ARG0 #possessor,
                           RSTR #harg2 ] >,
             HCONS.LIST < qeq &
                          [ HARG #harg,
                            LARG #lbl ],
                          qeq &
                          [ HARG #harg2,
                            LARG #lbl2 ] > ],
    DTR.SYNSEM.LOCAL [ CONT.HOOK #hook &
                                 [ INDEX #possessum &
                                         [ COG-ST activ-or-more ],
                                   LTOP #lbl ],
                       CAT [ HEAD #head &
                                  [ PRON - ],
                             VAL [ SPEC #spec,
                                   SUBJ #subj,
                                   COMPS #comps ] ] ] ].

verb-pc1-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc11-rule-dtr &
  [ DTR verb-pc1-rule-dtr ].

verb-pc1_lrt1-lex-rule := verb-pc1-lex-rule-super.

verb-pc2-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc2-rule-dtr ].

verb-pc2_lrt1-lex-rule := verb-pc2-lex-rule-super.

verb-pc3-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc2-rule-dtr &
  [ DTR verb63-verb-lex ].

verb-pc3_lrt1-lex-rule := verb-pc3-lex-rule-super.

verb-pc4-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc9-rule-dtr &
  [ DTR verb-pc4-rule-dtr ].

verb-pc4_lrt1-lex-rule := verb-pc4-lex-rule-super.

verb-pc5-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc4-rule-dtr & verb-pc9-rule-dtr &
  [ DTR verb10-verb-lex ].

verb-pc5_lrt1-lex-rule := verb-pc5-lex-rule-super.

verb-pc6-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc7-rule-dtr &
  [ DTR verb-pc6-rule-dtr ].

verb-pc6_lrt1-lex-rule := verb-pc6-lex-rule-super.

verb-pc7-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc7-rule-dtr ].

verb-pc7_lrt1-lex-rule := verb-pc7-lex-rule-super.

verb-pc8-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr &
  [ DTR verb63-verb-lex ].

verb-pc8_lrt1-lex-rule := verb-pc8-lex-rule-super.

verb-pc9-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr &
  [ DTR verb-pc9-rule-dtr ].

verb-pc9_lrt1-lex-rule := verb-pc9-lex-rule-super.

verb-pc10-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc18-rule-dtr & verb-pc9-rule-dtr &
  [ DTR verb-pc10-rule-dtr ].

verb-pc10_lrt1-lex-rule := verb-pc10-lex-rule-super.

verb-pc11-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc11-rule-dtr ].

verb-pc11_lrt1-lex-rule := verb-pc11-lex-rule-super.

verb-pc11_lrt2-lex-rule := verb-pc11-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PERNUM du ].

verb-pc13-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc13-rule-dtr ].

verb-pc13_lrt1-lex-rule := verb-pc13-lex-rule-super.

verb-pc14-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc11-rule-dtr &
  [ DTR verb-pc14-rule-dtr ].

verb-pc14_lrt1-lex-rule := verb-pc14-lex-rule-super.

verb-pc15-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr &
  [ DTR verb-pc15-rule-dtr ].

verb-pc15_lrt1-lex-rule := verb-pc15-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT pot ].

verb-pc16-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb111-verb-lex ].

verb-pc16_lrt1-lex-rule := verb-pc16-lex-rule-super.

verb-pc17-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb35-verb-lex ].

verb-pc17_lrt1-lex-rule := verb-pc17-lex-rule-super.

verb-pc18-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc11-rule-dtr &
  [ DTR verb-pc18-rule-dtr ].

verb-pc18_lrt1-lex-rule := verb-pc18-lex-rule-super.

verb-pc19-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr &
  [ DTR verb-pc19-rule-dtr ].

verb-pc19_lrt1-lex-rule := verb-pc19-lex-rule-super.

verb-pc20-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc24-rule-dtr &
  [ DTR verb-pc20-rule-dtr ].

verb-pc20_lrt1-lex-rule := verb-pc20-lex-rule-super.

verb-pc21-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc20-rule-dtr & verb-pc24-rule-dtr &
  [ DTR verb63-verb-lex ].

verb-pc21_lrt1-lex-rule := verb-pc21-lex-rule-super.

verb-pc22-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc22-rule-dtr ].

verb-pc22_lrt1-lex-rule := verb-pc22-lex-rule-super.

verb-pc24-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc11-rule-dtr &
  [ DTR verb-pc24-rule-dtr ].

verb-pc24_lrt1-lex-rule := verb-pc24-lex-rule-super.

verb-pc25-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc1-rule-dtr & verb-pc10-rule-dtr & verb-pc11-rule-dtr & verb-pc18-rule-dtr & verb-pc9-rule-dtr &
  [ DTR verb142-verb-lex ].

verb-pc25_lrt1-lex-rule := verb-pc25-lex-rule-super.

verb-pc27-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb63-verb-lex ].

verb-pc27_lrt1-lex-rule := verb-pc27-lex-rule-super.

verb-pc28-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc2-rule-dtr &
  [ DTR verb148-verb-lex ].

verb-pc28_lrt1-lex-rule := verb-pc28-lex-rule-super.

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

head-final-head-nexus := head-final &
  [ SYNSEM.ATTACH lmod,
    HEAD-DTR.SYNSEM.ATTACH notmod-or-lmod ].

head-initial-head-nexus := head-initial &
  [ SYNSEM.ATTACH rmod ].

head-subj-phrase := decl-head-subj-phrase & head-initial-head-nexus.

subj-head-phrase := decl-head-subj-phrase & head-final-head-nexus.

; The head of head-comp-phrase can't be: ['adp']

head-comp-phrase := basic-head-1st-comp-phrase & head-initial-head-nexus &
  [ SYNSEM.LOCAL.CAT.HEAD +nvjrcdmo ].

comp-head-phrase := basic-head-1st-comp-phrase & head-final-head-nexus &
  [ SYNSEM.LOCAL.CAT.HEAD.AUX - ].

head-comp-phrase-2 := basic-head-2nd-comp-phrase & head-initial-head-nexus.

comp-head-phrase-2 := basic-head-2nd-comp-phrase & head-final-head-nexus.

; Rules for building NPs.  Note that the Matrix uses SPR for
; the specifier of nouns and SUBJ for the subject (specifier) of verbs.

head-spec-phrase := basic-head-spec-phrase & head-final.

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS.LIST < [ PRED "exist_q_rel" ] > ].

basic-filler-phrase :+ [ SYNSEM.NON-LOCAL.SLASH.LIST < >,
    ARGS < [ SYNSEM [ LOCAL #slash,
                      NON-LOCAL.SLASH.LIST < > ] ],
           [ SYNSEM.NON-LOCAL.SLASH.LIST < #slash > ] > ].

extracted-subj-phrase := basic-extracted-subj-phrase &
  [ SYNSEM.LOCAL.CAT.HEAD verb ].

;;; Wh-question-related phrasal types

;;;;;;;;;;;;;;;;;;
;;; Coordination
;;;;;;;;;;;;;;;;;;

;;; Coordination Strategy 1

vp1-top-coord-rule := basic-vp-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

vp1-bottom-coord-rule := unary-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL [ COORD-STRAT "1",
                   COORD-REL.PRED "_and_coord_rel" ] ].

;;; Coordination Strategy 2

vp2-top-coord-rule := basic-vp-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

vp2-mid-coord-rule := basic-vp-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

vp2-bottom-coord-rule := conj-first-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

;;; Coordination Strategy 3

vp3-top-coord-rule := basic-vp-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

vp3-mid-coord-rule := basic-vp-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

vp3-bottom-coord-rule := conj-first-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

;;; Coordination Strategy 4

vp4-top-coord-rule := basic-vp-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "4" ].

vp4-mid-coord-rule := basic-vp-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "4" ].

vp4-bottom-coord-rule := conj-first-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "4" ].

;;; Coordination Strategy 5

np5-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

np5-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

np5-bottom-coord-rule := conj-first-bottom-coord-rule & np-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

;;; Coordination Strategy 6

np6-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "6" ].

np6-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "6" ].

np6-bottom-coord-rule := conj-first-bottom-coord-rule & np-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "6" ].

;;; Coordination Strategy 7

np7-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "7" ].

np7-bottom-coord-rule := unary-bottom-coord-rule & np-bottom-coord-phrase &
  [ SYNSEM.LOCAL [ COORD-STRAT "7",
                   COORD-REL.PRED "_and_coord_rel" ] ].

clause :+ [ SYNSEM.NON-LOCAL.QUE.LIST < > ].
